version: '3'

volumes:
  database:
  redis:

services:
  traefik:
    container_name: traefik
    image: traefik:1.7-alpine
    dns: ${DNS}
    restart: always
    ports:
      - 8080:8080
      - 80:80
    command: --api --docker --loglevel=debug \
             --entryPoints="Name:http Address::80" --docker.endpoint="unix:///var/run/docker.sock"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:lb.riskiwah.net"
      - "traefik.port=8080"
      - "traefik.frontend.entryPoints=http"
      - "com.centurylinklabs.watchtower.enable: true"

  watchtower:
    container_name: watchtower
    image: v2tec/watchtower:latest
    restart: always
    command: --schedule "0 0 5 * * 1" --cleanup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  nextcloud-database:
    container_name: nextcloud-database
    image: mariadb:latest
    restart: always
    ports:
      - 3306:3306
    volumes:
      - database:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${NC_DB_PASSWORD}
      MYSQL_PASSWORD: ${NC_DB_PASSWORD}
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
    labels:
      - "com.centurylinklabs.watchtower.enable: true"

  nextcloud-redis:
    container_name: nextcloud-redis
    image: redis:alpine
    restart: always
    volumes:
      - redis:/data
    labels:
      - "com.centurylinklabs.watchtower.enable: true"

  nextcloud:
    container_name: nextcloud
    image: wonderfall/nextcloud
    restart: always
    ports:
      - 8888:8888
    depends_on:
      - nextcloud-database
      - nextcloud-redis
    links:
      - nextcloud-database:nextcloud-database
      - nextcloud-redis:nextcloud-redis
    volumes:
      - ./volume/cloud/data:/data
      - ./volume/cloud/config:/config
      - ./volume/cloud/apps:/apps2
      - ./volume/cloud/themes:/nextcloud/themes
    environment:
      UID: 1000
      GID: 1000
      UPLOAD_MAX_SIZE: 100G
      APC_SHM_SIZE: 128M
      OPCACHE_MEM_SIZE: 128
      CRON_PERIOD: 15m
      TZ: Asia/Jakarta
      DB_TYPE: mysql
      DB_NAME: nextcloud
      DB_USER: nextcloud
      DB_PASSWORD: ${NC_DB_PASSWORD}
      DB_HOST: nextcloud-database
    labels:
      - "traefik.backend=nextcloud"
      - "traefik.frontend.rule=Host:nc.riskiwah.net"
      - "traefik.port=8888"
      - "traefik.frontend.entryPoints=http"
      - "com.centurylinklabs.watchtower.enable: true"
  
  gogs:
    image: gogs/gogs
    restart: always
    ports:
      # - "3000:3000"
      - "3022:22"
    volumes:
      - "./data/gogs:/data"
    labels:
      - "traefik.backend=gogs"
      - "traefik.frontend.rule=Host:git.riskiwah.net"
      - "traefik.port=3000"
      - "traefik.frontend.entryPoints=http"
      - "com.centurylinklabs.watchtower.enable: true"

  jenkins:
    image: jenkins/jenkins:alpine
    restart: always
    user: jenkins
    ports:
      - "8070:8070"
      - "5000:5000"
      - "50000:50000"
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - JENKINS_HOST_HOME="/datajenk/jenkins"
    labels:
      - "traefik.backend=jenkins"
      - "traefik.frontend.rule=Host:cicd.riskiwah.net"
      - "traefik.port=8080"
      - "traefik.frontend.entryPoints=http"
      - "com.centurylinklabs.watchtower.enable: true"

  drone-server:
    image: drone/drone:latest
    restart: always
    ports:
      - "8090:80"
      - "9000:9000"
    volumes:
      - /var/lib/drone:/var/lib/drone/
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
       #- DRONE_OPEN=true
       - DRONE_LOGS_DEBUG=true
       - DRONE_GIT_ALWAYS_AUTH=false
       - DRONE_SERVER_HOST=ci.riskiwah.net
       - DRONE_SERVER_PROTO=http
       - DRONE_AGENTS_ENABLED=true
       - DRONE_ADMIN=${DRONE_ADMIN}
       - DRONE_GOGS=true
       - DRONE_GOGS_SERVER=${DRONE_GOGS}
       - DRONE_SECRET=${DRONE_SECRET}
       - DRONE_RPC_SECRET=123
    labels:
       - "traefik.backend=ci"
       - "traefik.frontend.rule=Host:ci.riskiwah.net"
       - "traefik.port=80"
       - "traefik.frontend.entryPoints=http"
       - "com.centurylinklabs.watchtower.enable: true"

  drone-agent:
    image: drone/agent:latest
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      #- DRONE_SERVER=${DRONE_SERVER}
      #- DRONE_SECRET=${DRONE_SECRET}
      - DRONE_RPC_SERVER=http://drone-server
      - DRONE_RPC_SECRET=123
      - DRONE_LOGS_DEBUG=true
      - DRONE_RUNNER_CAPACITY=4
      - "com.centurylinklabs.watchtower.enable: true"
